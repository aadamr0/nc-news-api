{
  "GET /api": {
    "description": "serves up a json representation of all the available endpoints of the api",
    "queries": [],
    "exampleResponse": {},
    "requestFormat": ""
  },
  "GET /api/topics": {
    "description": "serves an array of all topics",
    "queries": [],
    "exampleResponse": {
      "topics": [{ "slug": "football", "description": "Footie!" }]
    },
    "requestFormat": ""
  },
  "GET /api/articles": {
    "description": "serves an array of all articles",
    "queries": ["author", "topic", "sort_by", "order"],
    "exampleResponse": {
      "articles": [
        {
          "title": "Seafood substitutions are increasing",
          "topic": "cooking",
          "author": "weegembump",
          "body": "Text from the article..",
          "created_at": "2018-05-30T15:59:13.341Z",
          "votes": 0,
          "comment_count": 6
        }
      ]
    },
    "requestFormat": ""
  },
  "GET /api/articles/:article_id": {
    "description": "serves an article specified by article id",
    "queries": [],
    "exampleResponse": {
      "article_id": 1,
      "title": "Running a Node App",
      "topic": "coding",
      "author": "jessjelly",
      "body": "This is part two of a series on how to get up and running with Systemd and Node.js. This part dives deeper into how to successfully run your app with systemd long-term, and how to set it up in a production environment.",
      "created_at": "2020-11-07T06:03:00.000Z",
      "votes": 0,
      "article_img_url": "https://images.pexels.com/photos/11035380/pexels-photo-11035380.jpeg?w=700&h=700",
      "comment_count": 9
    },
    "requestFormat": ""
  },
  "GET /api/articles/:article_id/comments": {
    "description": "Serves an array of comments based of article_id",
    "queries": [],
    "exampleResponse": {
      "commentsArray": [
        {
          "comment_id": 51,
          "body": "Eius dolor ipsa eaque qui sed accusantium est tenetur omnis. Eligendi necessitatibus sunt voluptate occaecati et quis consequuntur aut. Maxime nihil ut quia culpa.",
          "article_id": 3,
          "author": "grumpy19",
          "votes": -3,
          "created_at": "2020-01-14T03:12:00.000Z"
        },
        {
          "comment_id": 167,
          "body": "Deleniti itaque et est unde autem. Labore illo commodi quaerat natus fugiat adipisci. Adipisci unde recusandae aliquam suscipit ipsum.",
          "article_id": 3,
          "author": "grumpy19",
          "votes": 19,
          "created_at": "2020-02-05T09:16:00.000Z"
        }
      ]
    },
    "requestFormat": "{username: String, body: String}"
  },
  "POST /api/articles/:article_id/comments": {
    "description": "posts a comment, to article specified by article id. Request body must contain a pre existing username.",
    "queries": [],
    "exampleResponse": {
      "commentObj": {
        "comment_id": 304,
        "body": "comment body 12345",
        "article_id": 1,
        "author": "tickle122",
        "votes": 0,
        "created_at": "2024-04-05T13:15:25.029Z"
      }
    },
    "requestFormat": "{username: String, body: String}"
  },
  "PATCH /api/articles/:article_id": {
    "description": "Sets the number of votes of an article to a specified number",
    "queries": [],
    "exampleResponse": {},
    "requestFormat": "{inc_votes: Number}"
  },
  "DELETE /api/comments/:comment_id": {
    "description": "deletes a comment by comment_id",
    "queries": [],
    "exampleResponse": {},
    "requestFormat": ""
  },
  "GET /api/users": {
    "description": "serves an array of all users",
    "queries": [],
    "exampleResponse": {},
    "requestFormat": ""
  }
}
